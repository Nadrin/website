name: Aurora
date: 2013
tech: Windows, C++, CUDA, Maya API
category: Graphics
description: GPU raytracer for Maya
icon: /images/icons/aurora.png
images:
  - aurora-s1.png
  - aurora-s2.png
  - aurora-s3.png
  - aurora-s4.png
files:
  - { link: '/files/aurora-v1.0_setup.exe', title: Maya plugin installer }
  - { link: 'https://github.com/Nadrin/aurora', title: Source code }
  - { link: '/files/thesis.pdf', title: Thesis }
body: |
  <p><b>Aurora is a Monte Carlo distribution raytracer for <a href="http://www.autodesk.com/products/autodesk-maya/overview">Autodesk Maya 2014</a> using NVIDIA CUDA technology for accelerating rendering on the GPU.</b></p>
  <p>This project is accompanying my master's thesis titled <b>&bdquo;Light modeling in Computer Graphics on the GPU&ldquo;</b> written under the supervision of Mr. Wojciech Kowalewski PhD at Faculty of Mathematics and Computer Science, Adam Mickiewicz University of Pozna≈Ñ.</p>
  <p>The raytracer operates on triangle meshes which get spatially presorted in a way that allows indexing geometry like a heap and thus accelerating ray-scene intersection tests. This method was published by Eisemann et. al. in 2012, in their technical report <a href="http://graphics.tu-bs.de/publications/Eisemann12IOSP/">Geometry presorting for implicit object space partitioning</a>. Not using a dedicated acceleration structures poses a huge advantage for GPUs where main bottleneck is memory bandwith saturation.</p>
  <p>Targetting CUDA turned out to be quite a design challenge due to seperate memory spaces (host memory and device memory) and NVCC's lack of support for full C++. Maya API code and CUDA kernels are seperated and shared classes avoid inheritance or virtual functions.</p>
  <p>The raytracer aims to be physically accurate and supports point, directional and area lights, Lambertian diffuse surfaces and Fresnel reflection/refraction. In the future I plan to extended it with progressive photon mapping as a global illumination algorithm.</p>
