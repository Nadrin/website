name: Procedural Terrain
date: 2016
tech: C++, Unreal Engine 4, SQLite
category: GameDev
description: SimCity2000 like terrain gen
icon: /images/icons/terrain.png
images:
  - terrain-s1.png
  - terrain-s2.png
  - terrain-s3.png
  - terrain-s4.png
body: |
  <p><b>Procedural terrain generator in the style of Sim City 2000 within Unreal Engine 4. A part of my hobby game project.</b></p>
  <p>While working on this I needed to solve three fundamental problems: heightmap generation, terrain mesh construction, and network replication.</p>
  <p><b>Heightmap generation.</b> The heightmap is generated in 33x33 <i>chunks</i> (32+1 samples per side, additional sample is needed for seamless tiling), by several octaves of two dimensional <i><b>Improved Perlin Noise</b></i>. New heightmap chunks are generated during gameplay within player immediate vicinity, and are cached for future re-use in a SQLite database (indexed by 64-bit spatial hash). Chunk generation is off-loaded to worker threads in order to minimize blocking the game thread.</p>
  <p><b>Mesh construction.</b> Each terrain chunk is represented by an actor with a procedural mesh component. Due to the nature of UE4, mesh construction must happen on the game thread, and as such is amortized over several frames to prevent performance hiccups. Far away chunk actors are culled and/or despawned, again to maximize performance. Mesh construction itself is a relatively simple algorithm with some similarities to <i><b>marching cubes</b></i>, mainly in its approach of building a bit index of current cell (based on vertex height differences), and using that index in order to decide final cell topology. Each cell consists of two triangles whose vertices represent four adjacent heightmap samples.</p>
  <p><b>Network replication.</b> The whole process works quite well in multiplayer scenario. Server generates (and caches) terrain chunks which are later replicated to relevant clients. Each client receives only chunks within the vicinity of its character. Chunks are spawned in an outwards spiral pattern, so that those closer to the character are available sooner. Replicated heightmap data is about 1kB in size, per chunk.</p>
